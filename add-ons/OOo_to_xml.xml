<?xml version="1.0" encoding="UTF-8"?>
<!-- We must define several namespaces, because we need them to access -->
<!-- the document model of the in-memory OpenOffice.org document.      -->
<!-- If we want to access more parts of the document model, we must    -->
<!-- add there namesspaces here, too.                                  -->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
   xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0"
   xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0"
   xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0"
   exclude-result-prefixes="office table text">

<xsl:output method = "xml" indent = "yes" encoding = "UTF-8" omit-xml-declaration = "no"/>

<!-- By setting the PropertyValue "URL" in the properties used in storeToURL(), -->
<!-- we can pass a single parameter to this stylesheet.                         -->
<!-- Caveat: If we use the "URL" property in the stylesheet and call in OOo     -->
<!-- from the menu "File" > "Export...", OOo assigns a target URL. And that     -->
<!-- might not be what we want.                                                 -->
<xsl:param name="targetURL"/>

<!-- Process the document model -->
<xsl:template match="/">
  <subscribers>
   <!-- Process all tables -->
   <xsl:apply-templates select="//table:table"/>
  </subscribers>
</xsl:template>

<xsl:template match="table:table">
  <!-- Process all table-rows after the column labels in table-row 1 -->
  <xsl:for-each select="table:table-row">
   <xsl:if test="position()>1">
    <subscriber>
     <xsl:for-each select="table:table-cell">
      <xsl:choose>
       <xsl:when test="position()=1">
       <id><xsl:value-of select="text:p"/></id>
       </xsl:when>
       <xsl:when test="position()=2">
       <username><xsl:value-of select="text:p"/></username>
      </xsl:when>
       <xsl:when test="position()=3">
       <password><xsl:value-of select="text:p"/></password>
      </xsl:when>
       <xsl:when test="position()=4">
       <domain><xsl:value-of select="text:p"/></domain>
      </xsl:when>
       <xsl:when test="position()=5">
       <screenname><xsl:value-of select="text:p"/></screenname>
      </xsl:when>
       <xsl:when test="position()=6">
       <rpid><xsl:value-of select="text:p"/></rpid>
      </xsl:when>
       <xsl:when test="position()=7">
       <email_address><xsl:value-of select="text:p"/></email_address>
      </xsl:when>
       <xsl:when test="position()=8">
       <vmail><xsl:value-of select="text:p"/></vmail>
      </xsl:when>
       <xsl:when test="position()=9">
       <shared><xsl:value-of select="text:p"/></shared>
      </xsl:when>
       <xsl:when test="position()=10">
       <enabled><xsl:value-of select="text:p"/></enabled>
      </xsl:when>
      </xsl:choose>
     </xsl:for-each>
    </subscriber>
   </xsl:if>
  </xsl:for-each>
</xsl:template>

</xsl:stylesheet>
